// Code generated by mockery. DO NOT EDIT.

package groupmembership

import (
	context "context"

	groups "github.com/microsoftgraph/msgraph-sdk-go/groups"
	models "github.com/microsoftgraph/msgraph-sdk-go/models"
	mock "github.com/stretchr/testify/mock"
)

// mockIGroupClient is an autogenerated mock type for the iGroupClient type
type mockIGroupClient struct {
	mock.Mock
}

type mockIGroupClient_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIGroupClient) EXPECT() *mockIGroupClient_Expecter {
	return &mockIGroupClient_Expecter{mock: &_m.Mock}
}

// ByGroupId provides a mock function with given fields: id
func (_m *mockIGroupClient) ByGroupId(id string) *groups.GroupItemRequestBuilder {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for ByGroupId")
	}

	var r0 *groups.GroupItemRequestBuilder
	if rf, ok := ret.Get(0).(func(string) *groups.GroupItemRequestBuilder); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*groups.GroupItemRequestBuilder)
		}
	}

	return r0
}

// mockIGroupClient_ByGroupId_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ByGroupId'
type mockIGroupClient_ByGroupId_Call struct {
	*mock.Call
}

// ByGroupId is a helper method to define mock.On call
//   - id string
func (_e *mockIGroupClient_Expecter) ByGroupId(id interface{}) *mockIGroupClient_ByGroupId_Call {
	return &mockIGroupClient_ByGroupId_Call{Call: _e.mock.On("ByGroupId", id)}
}

func (_c *mockIGroupClient_ByGroupId_Call) Run(run func(id string)) *mockIGroupClient_ByGroupId_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *mockIGroupClient_ByGroupId_Call) Return(_a0 *groups.GroupItemRequestBuilder) *mockIGroupClient_ByGroupId_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockIGroupClient_ByGroupId_Call) RunAndReturn(run func(string) *groups.GroupItemRequestBuilder) *mockIGroupClient_ByGroupId_Call {
	_c.Call.Return(run)
	return _c
}

// Get provides a mock function with given fields: ctx, config
func (_m *mockIGroupClient) Get(ctx context.Context, config *groups.GroupsRequestBuilderGetRequestConfiguration) (models.GroupCollectionResponseable, error) {
	ret := _m.Called(ctx, config)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 models.GroupCollectionResponseable
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *groups.GroupsRequestBuilderGetRequestConfiguration) (models.GroupCollectionResponseable, error)); ok {
		return rf(ctx, config)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *groups.GroupsRequestBuilderGetRequestConfiguration) models.GroupCollectionResponseable); ok {
		r0 = rf(ctx, config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(models.GroupCollectionResponseable)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *groups.GroupsRequestBuilderGetRequestConfiguration) error); ok {
		r1 = rf(ctx, config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockIGroupClient_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type mockIGroupClient_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
//   - config *groups.GroupsRequestBuilderGetRequestConfiguration
func (_e *mockIGroupClient_Expecter) Get(ctx interface{}, config interface{}) *mockIGroupClient_Get_Call {
	return &mockIGroupClient_Get_Call{Call: _e.mock.On("Get", ctx, config)}
}

func (_c *mockIGroupClient_Get_Call) Run(run func(ctx context.Context, config *groups.GroupsRequestBuilderGetRequestConfiguration)) *mockIGroupClient_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*groups.GroupsRequestBuilderGetRequestConfiguration))
	})
	return _c
}

func (_c *mockIGroupClient_Get_Call) Return(_a0 models.GroupCollectionResponseable, _a1 error) *mockIGroupClient_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockIGroupClient_Get_Call) RunAndReturn(run func(context.Context, *groups.GroupsRequestBuilderGetRequestConfiguration) (models.GroupCollectionResponseable, error)) *mockIGroupClient_Get_Call {
	_c.Call.Return(run)
	return _c
}

// newMockIGroupClient creates a new instance of mockIGroupClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockIGroupClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockIGroupClient {
	mock := &mockIGroupClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
