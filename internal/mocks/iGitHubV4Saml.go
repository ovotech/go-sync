// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IGitHubV4Saml is an autogenerated mock type for the iGitHubV4Saml type
type IGitHubV4Saml struct {
	mock.Mock
}

type IGitHubV4Saml_Expecter struct {
	mock *mock.Mock
}

func (_m *IGitHubV4Saml) EXPECT() *IGitHubV4Saml_Expecter {
	return &IGitHubV4Saml_Expecter{mock: &_m.Mock}
}

// Query provides a mock function with given fields: ctx, q, variables
func (_m *IGitHubV4Saml) Query(ctx context.Context, q interface{}, variables map[string]interface{}) error {
	ret := _m.Called(ctx, q, variables)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, map[string]interface{}) error); ok {
		r0 = rf(ctx, q, variables)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IGitHubV4Saml_Query_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Query'
type IGitHubV4Saml_Query_Call struct {
	*mock.Call
}

// Query is a helper method to define mock.On call
//   - ctx context.Context
//   - q interface{}
//   - variables map[string]interface{}
func (_e *IGitHubV4Saml_Expecter) Query(ctx interface{}, q interface{}, variables interface{}) *IGitHubV4Saml_Query_Call {
	return &IGitHubV4Saml_Query_Call{Call: _e.mock.On("Query", ctx, q, variables)}
}

func (_c *IGitHubV4Saml_Query_Call) Run(run func(ctx context.Context, q interface{}, variables map[string]interface{})) *IGitHubV4Saml_Query_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(interface{}), args[2].(map[string]interface{}))
	})
	return _c
}

func (_c *IGitHubV4Saml_Query_Call) Return(_a0 error) *IGitHubV4Saml_Query_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewIGitHubV4Saml interface {
	mock.TestingT
	Cleanup(func())
}

// NewIGitHubV4Saml creates a new instance of IGitHubV4Saml. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIGitHubV4Saml(t mockConstructorTestingTNewIGitHubV4Saml) *IGitHubV4Saml {
	mock := &IGitHubV4Saml{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
